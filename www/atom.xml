<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[CXH.ME]]></title>
  <link href="http://cxh.me/atom.xml" rel="self"/>
  <link href="http://cxh.me/"/>
  <updated>2015-01-05T13:43:30+08:00</updated>
  <id>http://cxh.me/</id>
  <author>
    <name><![CDATA[Harry Chen]]></name>
    <email><![CDATA[sdqxcxh@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Python字典解析中进行update]]></title>
    <link href="http://cxh.me/2015/01/05/python-dict-update-in-comprehensions/"/>
    <updated>2015-01-05T13:25:00+08:00</updated>
    <id>http://cxh.me/2015/01/05/python-dict-update-in-comprehensions</id>
    <content type="html"><![CDATA[<p>  遇到这样一个事情，从一个Thrift源取回部分数据，结构是一个对象数组，根据其中所有的Id字段从数据库又取回另一部分数据，结构是一个字典数组。那么问题来了，<del>挖掘机技术哪家强</del>如何按照id合并两份数据?</p>

<p>  这其实就是JOIN，也就两种做法，nested loop join和hash join（这些词都是在ob的时候听到的，其实道理很简单）。做nested loop join的话，最好按排序，做hash join的话，就需要把其中一份数据的变成以id字段为key的字典。这里我们选择后一种，python代码实现起来比较简洁。前一种貌似只能for循环搞下标，不知道有没有直接的built in function。</p>

<p>  代码比较简单，就是遇到了一个有代表性的问题：</p>

<pre><code>results = [result.update(items[result['id']])) for result in results]
</code></pre>

<p>  id字段是join的key，results是从数据库取到的，items是从thrift取到的。关键问题在于update的结果是None，result是被原地修改的。所以需要改成下面：</p>

<pre><code>results = [dict(result.items() + items[result['id']].items()) for result in results]
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse调试的时候出现class not found]]></title>
    <link href="http://cxh.me/2015/01/05/eclipse-class-not-found/"/>
    <updated>2015-01-05T09:50:00+08:00</updated>
    <id>http://cxh.me/2015/01/05/eclipse-class-not-found</id>
    <content type="html"><![CDATA[<p>  昨天遇到这样一个问题：</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2015/classnotfound.png"></p>

<p>  开始以为是依赖的问题，更新了所有的jar包和Maven依赖，发现没有什么问题。怀疑是eclipse，写了一个简单的程序，发现一样找不到class。</p>

<p>  解决办法是先把breakpoint里面的ClassNotFoundException: caught and uncaught去掉了。不知道为什么会造成这个结果。</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2015/breakpoint.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux上的远程log监控]]></title>
    <link href="http://cxh.me/2015/01/04/linux-remote-log-watch/"/>
    <updated>2015-01-04T17:34:00+08:00</updated>
    <id>http://cxh.me/2015/01/04/linux-remote-log-watch</id>
    <content type="html"><![CDATA[<p>  名字太大，其实只是遇到了一个问题，想远程实时看一个log文件的变化。开始是这么做的。</p>

<pre><code>vim 里面 :e scp://xxx@xxx//filePath
:e! 来刷新
</code></pre>

<p>   太low了。直接用ssh：</p>

<pre><code>ssh xx@xxx "less filePath"
</code></pre>

<p>   发现less直接就退出了。 换成:</p>

<pre><code>ssh -t xx@xxx "less filePath"
</code></pre>

<p>   也不能实时刷新。测试less 本地一个文件同时写入，发现less没有实时刷新的功能。看来是在ob的时候deploy给我的错觉啊。</p>

<p>   换tail:</p>

<pre><code>ssh -t xx@xxx "tail filePath"
</code></pre>

<p>   还是直接执行完毕退出。查tail有没有自动刷新的模式，有一个follow：</p>

<pre><code>ssh xx@xx "tail -f filePath"
</code></pre>

<p>   搞定。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git中删除已经缓存的文件]]></title>
    <link href="http://cxh.me/2015/01/04/del-cached-files-in-git/"/>
    <updated>2015-01-04T16:49:00+08:00</updated>
    <id>http://cxh.me/2015/01/04/del-cached-files-in-git</id>
    <content type="html"><![CDATA[<p>  经常遇到一种情况，开始项目的时候没加.gitignore文件，提交之后发现有大量的pyc文件残留，这样两地共同修改的时候pyc文件会造成大量的冲突。针对这种情况，可以如下解决：</p>

<ol>
<li><p> 建立.gitignore文件并写入：</p>

<pre><code>.pyc
.swp
</code></pre></li>
<li><p> 删除所有缓存中的数据：</p>

<pre><code>find . -name '*.pyc' -o -name '*.swp' &gt; /tmp/files
while read line; do
    git rm --cached $line
done &lt; /tmp/files
</code></pre></li>
<li><p> 在冲突的一端回滚所有pyc冲突：</p>

<pre><code>find . -name '*.pyc' -o -name '*.swp' &gt; /tmp/files
while read line; do
    git checkout -f  $line
done &lt; /tmp/files
</code></pre></li>
<li><p> 冲突的一端更新修改：</p>

<pre><code>git pull origin
</code></pre></li>
</ol>


<p>  补充：</p>

<p>  蛋疼了&hellip;直接这样就行了</p>

<pre><code>git rm --cached `find . -name '*.pyc' -o -name '*.swp'`

或者 find . -name '*.pyc' -o -name '*.swp' -exec git rm --cached {} \; 
</code></pre>

<p>  忘了这些命令都接受多个参数&hellip;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thrift依赖和Slf4j]]></title>
    <link href="http://cxh.me/2014/12/25/thrift-and-slf4j/"/>
    <updated>2014-12-25T18:24:00+08:00</updated>
    <id>http://cxh.me/2014/12/25/thrift-and-slf4j</id>
    <content type="html"><![CDATA[<p>  用Thrift做一个分布式系统的RPC，发现跑起来的时候总提示<code>Failed to load class org.slf4j.impl.StaticLoggerBinder</code>，看了看maven依赖感觉没啥问题啊，slf4j-api-xx.jar好好的在呢。分析了maven的依赖，eclipse的问题，最后发现都没问题啊。最后发现还是不了解slf4j，以为跟log4j一样的，其实作为一个proxy，slf4j-api只是一套接口，实现的依赖没有添加进来。</p>

<p>   Thrift的依赖加进来的时候（如下），Dependency Hierachy解析会添加相关的包，但是只添加了slf4j-api，动态编译也不会出错，毕竟接口都有了，但是运行时从classpath找不到对应的包。</p>

<pre><code>  &lt;dependency&gt;
    &lt;groupId&gt;org.apache.thrift&lt;/groupId&gt;
    &lt;artifactId&gt;libthrift&lt;/artifactId&gt;
    &lt;version&gt;0.8.0&lt;/version&gt;
  &lt;/dependency&gt;
</code></pre>

<p>  在上面的基础上要加入一个任意一个slf4j-api的实现：</p>

<pre><code>Placing one (and only one) of slf4j-nop.jar, slf4j-simple.jar, slf4j-log4j12.jar, slf4j-jdk14.jar or logback-classic.jar on the class path should solve the problem.
</code></pre>

<p>  另外libthrift的pom默认依赖的slf4j-api应该是1.5.8，可能会出现如下不兼容的情况：</p>

<pre><code>SLF4J: The requested version 1.5.8 by your slf4j binding is not compatible with [1.6, 1.7]
SLF4J: See http://www.slf4j.org/codes.html#version_mismatch for further details.
</code></pre>

<p>  可以对libthrift的POM加入例外：</p>

<pre><code>&lt;exclusions&gt;
    &lt;exclusion&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
    &lt;/exclusion&gt;
&lt;/exclusions&gt;
</code></pre>

<p>  每个实现详见<a href="http://blog.csdn.net/robert_mm/article/details/8197108" title=" slf4j-api、slf4j-log4j12以及log4j之间什么关系？">参考文献2</a></p>

<h3>参考文献:</h3>

<blockquote><p>[1] SLF4J warning or error messages and their meanings, <a href="http://www.slf4j.org/codes.html#StaticLoggerBinder">http://www.slf4j.org/codes.html#StaticLoggerBinder</a></p>

<p>[2]  slf4j-api、slf4j-log4j12以及log4j之间什么关系？, <a href="http://blog.csdn.net/robert_mm/article/details/8197108">http://blog.csdn.net/robert_mm/article/details/8197108</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于Maven回滚了eclipse中项目的JRE版本]]></title>
    <link href="http://cxh.me/2014/12/25/maven-revert-eclipse-jdk-version/"/>
    <updated>2014-12-25T14:49:00+08:00</updated>
    <id>http://cxh.me/2014/12/25/maven-revert-eclipse-jdk-version</id>
    <content type="html"><![CDATA[<p>  发现在命令行对一个项目执行<code>mvn install</code>的时候，回eclipse看就会有些错误，原因如<a href="http://cxh.me/2014/12/08/eclipse-java-override-warning/" title="关于eclipse里面override上的warning">这里</a>所说，JRE版本和compliance level被回滚到1.5了。查看配置发现，eclipse导入配置并没有设置这里。如下：</p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;projectDescription&gt;
    &lt;name&gt;realtime_ua&lt;/name&gt;
    &lt;comment&gt;&lt;/comment&gt;
    &lt;projects&gt;
    &lt;/projects&gt;
    &lt;buildSpec&gt;
        &lt;buildCommand&gt;
            &lt;name&gt;org.eclipse.m2e.core.maven2Builder&lt;/name&gt;
            &lt;arguments&gt;
            &lt;/arguments&gt;
        &lt;/buildCommand&gt;
    &lt;/buildSpec&gt;
    &lt;natures&gt;
        &lt;nature&gt;org.eclipse.m2e.core.maven2Nature&lt;/nature&gt;
    &lt;/natures&gt;
&lt;/projectDescription&gt;
</code></pre>

<p>  实际导入的JRE版本是m2eclipse插件决定的。参考<a href="http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b" title="What causes a new Maven project in Eclipse to use Java 1.5 instead of Java 1.6 by default and how can I ensure it doesn't?">这里</a>加入对maven-compiler-plugin的默认配置即可：</p>

<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
              &lt;source&gt;1.6&lt;/source&gt;
              &lt;target&gt;1.6&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>

<p>  多module项目请把配置直接加在root-project的pom.xml下。</p>

<!--more-->


<h3>参考文献:</h3>

<blockquote><p>[1] 关于eclipse里面override上的warning, <a href="http://cxh.me/2014/12/08/eclipse-java-override-warning/">http://cxh.me/2014/12/08/eclipse-java-override-warning/</a></p>

<p>[2] What causes a new Maven project in Eclipse to use Java 1.5 instead of Java 1.6 by default and how can I ensure it doesn&rsquo;t?, <a href="http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b">http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b</a></p>

<p>[3] Solved: Java compiler level does not match the version of the installed Java project facet, <a href="http://howtodoinjava.com/2013/06/04/solved-java-compiler-level-does-not-match-the-version-of-the-installed-java-project-facet/">http://howtodoinjava.com/2013/06/04/solved-java-compiler-level-does-not-match-the-version-of-the-installed-java-project-facet/</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash Cookie的跨域读取]]></title>
    <link href="http://cxh.me/2014/12/12/flash-cookie-cross-domain/"/>
    <updated>2014-12-12T12:35:00+08:00</updated>
    <id>http://cxh.me/2014/12/12/flash-cookie-cross-domain</id>
    <content type="html"><![CDATA[<p>  关于Flash Cookie相关的问题见<a href="http://cxh.me/2014/11/25/flash-shared-cookie/" title="跨浏览器cookie">参考文献1</a>。这里主要说如何实现跨域的Flash Cookie读取。</p>

<p>  首先，我们要实现Js调用Flash插件。比较简单的实现是用<a href="https://code.google.com/p/swfobject/" title="swfobject">swfobject</a>。简单的示例代码如下：</p>

<pre><code>&lt;object id="myCom" name="myCom" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="0" height="0"&gt;
    &lt;param name="movie" value="http://xxx/xxx.swf" /&gt;
    &lt;param name="allowScriptAccess" value="always" /&gt;
    &lt;!--[if !IE]&gt;--&gt;
    &lt;object name="myCom" type="application/x-shockwave-flash" data="http://xxx/xxx.swf" width="0" height="0"&gt;
        &lt;param name="allowScriptAccess" value="always" /&gt;
    &lt;!--&lt;![endif]--&gt;
        &lt;div&gt;
            &lt;h1&gt;SWF Cannot be loaded!&lt;/h1&gt;
        &lt;/div&gt;
    &lt;!--[if !IE]&gt;--&gt;
    &lt;/object&gt;
    &lt;!--&lt;![endif]--&gt;
&lt;/object&gt;
</code></pre>

<!--more-->


<p>  js部分代码如下：</p>

<pre><code>    function callbackfn() {
        var obj = swfobject.getObjectById("myCom");
        if (obj &amp;&amp; typeof obj.getXXX != "undefined") {
            alert(obj.getXXX('xxx'));
        }
    };
    swfobject.registerObject("myCom", "9.0.0", "expressInstall.swf");
</code></pre>

<p>  具体含义参见如下swfobject的document：</p>

<ul>
<li>classid (outer object element only, value is always clsid:D27CDB6E-AE6D-11cf-96B8-444553540000)</li>
<li>type (inner object element only, value is always application/x-shockwave-flash)</li>
<li>data (inner object element only, defines the URL of a SWF)</li>
<li>width (both object elements, defines the width of a SWF)</li>
<li>height (both object elements, defines the height of a SWF)</li>
</ul>


<p>  跨域的问题上，需要注意如下几个：</p>

<ol>
<li><p> 调用object的组件的跨域声明是必须的。</p>

<pre><code>&lt;param name="allowScriptAccess" value="always" /&gt;
</code></pre></li>
<li><p> swf_url使用被访问域的swf链接。</p></li>
<li><p> 被访问的域根目录需要开放访问。crossdomain.xml需要开放跨域限制。当然像如下这种粗放的是不好的。（虽然很方便）</p>

<pre><code>&lt;cross-domain-policy&gt;
    &lt;allow-access-from domain="*" /&gt;
&lt;/cross-domain-policy&gt;
</code></pre></li>
<li><p> swf源码需要开放权限：</p>

<pre><code>System.security.allowDomain("yourhtmldomain.com");
</code></pre></li>
</ol>


<p>  OK.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kafka Consumer API几个问题]]></title>
    <link href="http://cxh.me/2014/12/09/notes-on-kafka-consumer-api/"/>
    <updated>2014-12-09T10:12:00+08:00</updated>
    <id>http://cxh.me/2014/12/09/notes-on-kafka-consumer-api</id>
    <content type="html"><![CDATA[<p>  一直不理解这里的topicCountMap是什么意思。kafka的High Level Consumer API设计实在是比较费解。源码又比较费解。</p>

<pre><code>Map&lt;String, Integer&gt; topicCountMap = new HashMap&lt;String, Integer&gt;();
topicCountMap.put(topic, new Integer(1));
Map&lt;String, List&lt;KafkaStream&lt;byte[], byte[]&gt;&gt;&gt; consumerMap = consumer.createMessageStreams(topicCountMap);
List&lt;KafkaStream&lt;byte[], byte[]&gt;&gt; streams = consumerMap.get(topic);
</code></pre>

<p>  后来查阅到这是跟线程相关的，指定消费每个topic的线程数，然后kafka consumer connector会建立对应的stream流。每个线程对应于一个KafkaStream。一个多线程消费的例子见<a href="http://www.cnblogs.com/fxjwind/p/3794255.html" title="Kafka Consumer接口">参考文献</a>.</p>

<h3>参考文献:</h3>

<blockquote><p>[1] Kafka Consumer接口, <a href="http://www.cnblogs.com/fxjwind/p/3794255.html">http://www.cnblogs.com/fxjwind/p/3794255.html</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于eclipse里面override上的warning]]></title>
    <link href="http://cxh.me/2014/12/08/eclipse-java-override-warning/"/>
    <updated>2014-12-08T16:53:00+08:00</updated>
    <id>http://cxh.me/2014/12/08/eclipse-java-override-warning</id>
    <content type="html"><![CDATA[<p>  写一个Thrift的调用。生成的Thrift代码在eclipse里面打开就报错。如下：</p>

<p>  <img class="center" src="http://cxh.me/images/2014/method_callback.png" title="" ></p>

<p>  看AsyncMethodCallback的代码，没有任何问题啊：</p>

<p>  <img class="center" src="http://cxh.me/images/2014/async_callback.png" title="" ></p>

<p>  后来发现当前项目JRE的版本是1.5，<del>~貌似1.5的JRE有个bug</del>。切到1.6以上版本就可以了。原因如下：</p>

<pre><code>Eclipse is defaulting to Java 1.5 and you have classes implementing interface methods (which in Java 1.6 can be annotated with @Override, but in Java 1.5 can only be applied to methods overriding a superclass method).
</code></pre>

<p>  如果依然有问题，可以直接改一下Compliance Level：</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/compliance.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redis-copy的使用]]></title>
    <link href="http://cxh.me/2014/12/01/redis-copy-usage/"/>
    <updated>2014-12-01T17:01:00+08:00</updated>
    <id>http://cxh.me/2014/12/01/redis-copy-usage</id>
    <content type="html"><![CDATA[<p>  有时候我们需要迁移redis的数据，从本质上看，这基本上是个rehash的过程。我们这里使用<a href="https://github.com/yaauie/redis-copy" title="redis-copy">redis-copy</a>实现。</p>

<p>  简单写一下步骤。首先得有ruby环境，然后直接安装：</p>

<pre><code>gem install redis-copy
</code></pre>

<p>  可能会遇到几个包缺失的问题，如果有报错，安装如下几个包：</p>

<pre><code>gem install redis
gem install hiredis
gem install recommendify
</code></pre>

<p>  简单测试一下redis-copy</p>

<p>  首先建立source和dest redis server：</p>

<pre><code>redis-server redis.src.conf //6379 port
redis-server redis.dst.conf //6380 port
</code></pre>

<p>  redis.conf里面换一下端口就行了。写入几个值</p>

<pre><code>redis-cli -h localhost  -p 6379
select 1
set mykey myvalue
</code></pre>

<p>  然后拷贝src里面db1的所有键值到dst的默认db(0).</p>

<pre><code>sudo redis-copy localhost:6379/1 localhost:6380
</code></pre>

<p>  去dst redis看一下就行了。</p>

<pre><code>redis-cli -h localhost -p 6380
keys *
</code></pre>

<p>  可以看到之前的key-value拷贝过来了。大数据量下的表现明天测一下。</p>

<h3>参考文献:</h3>

<blockquote><p>[1] redis-copy, <a href="https://github.com/yaauie/redis-copy">https://github.com/yaauie/redis-copy</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[跨浏览器cookie]]></title>
    <link href="http://cxh.me/2014/11/25/flash-shared-cookie/"/>
    <updated>2014-11-25T16:57:00+08:00</updated>
    <id>http://cxh.me/2014/11/25/flash-shared-cookie</id>
    <content type="html"><![CDATA[<p>  有时候为了标识一个用户，我们需要跨浏览器的cookie，这样用户在一个浏览器的行为可以被另一个浏览器读取。当然这种行为也备受争议，对于保护用户隐私来讲，这简直是后门。所以cookie里面一定不要存任何重要数据。</p>

<p>  不过这么做也不完全是为了用户数据跟踪。从用户体验的角度看，可以这么实现跨浏览器甚至跨域的session。具体实现上有如下几种方法：</p>

<ol>
<li><p> Local Shared Objects (Flash Cookies)</p></li>
<li><p> Silverlight Isolated Storage</p></li>
<li><p> 使用HTML5客户端储存数据方法。</p></li>
<li><p> evercookie</p></li>
</ol>


<p>  关于第二种有一个解释：一般装了silverlight的人都装了flash，想想真是呵呵了。第三种参见<a href="http://www.zhangxinxu.com/wordpress/2011/09/html5-localstorage%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B/" title="HTML5 localStorage本地存储实际应用举例">参考文献</a>。</p>

<p>  <a href="https://github.com/samyk/evercookie" title="EverCookie">evercookie</a>原则上讲不能算一种方法，而是一种实现。每次写入的时候都会把cookie写到多个地方，下次读取的时候如果发现cookie有丢失，就通过还存在cookie副本来恢复cookie。乍一看原理跟3721那个进程交叉保护差不多，也算是流氓软件了。</p>

<p>  这里我们重点讲第一种。</p>

<!--more-->


<p>  flash cookie使用的是flash自己的本地存储，所以决定于flash实例。大部分浏览器使用的是系统的flash实例，所以flash cookie能跨浏览器存在。但是有几个例外。</p>

<p>  目前实测IE/Maxthon/Firefox/Safari/360浏览器都是采用系统的Flash实例，所以能够共享flash cookie，目前测到的几个特例是chrome/搜狗/百度浏览器，分别采用了自己浏览器内部打包的flash实例。另外不同系统用户的cookie不共享。从下面一张图可以清晰看出：</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/flash_cookie.png"></p>

<p>  flash cookie的写入可以参考如下项目&#8220;，作者在<a href="http://nfriedly.com/techblog/2010/07/swf-for-javascript-cross-domain-flash-cookies/" title="JavaScript library and .swf for cross-domain flash cookies">主页</a>详细说明了使用方法。需要注意的是swf_url控制的写入路径会包含在cookie的namespace里面，也就是说会有如下的目录结构：</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/tree.png"></p>

<p>  另外关于跨域，作者说不同域的js需要使用同一个swf，猜测是js请求swf的时候浏览器不判断在哪个域。swf内部是有跨域安全机制的，如果关闭掉的话，是可以实现请求跨域的。但是js请求其他域的数据会被浏览器拒绝。</p>

<p>  测试如下：</p>

<p>  在两台机器上部署相同的Flash Cookie测试项目，其中61域和74域的js都请求74域的swf：</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/cross.png"></p>

<p>  在74的机器上写入flash cookie: &ldquo;74 write&rdquo;</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/74write.png"></p>

<p>  在61的机器上load:</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/61load.png"></p>

<p>  证明可以跨域读取cookie。</p>

<h3>参考文献:</h3>

<blockquote><p>[1] JavaScript library and .swf for cross-domain flash cookies, <a href="http://nfriedly.com/techblog/2010/07/swf-for-javascript-cross-domain-flash-cookies/">http://nfriedly.com/techblog/2010/07/swf-for-javascript-cross-domain-flash-cookies/</a></p>

<p>[2] Javascript-Flash-Cookies, <a href="https://github.com/nfriedly/Javascript-Flash-Cookies">https://github.com/nfriedly/Javascript-Flash-Cookies</a></p>

<p>[3]  How Facebook Sets and uses cross-Domain cookies, <a href="http://nfriedly.com/techblog/2010/08/how-facebook-sets-and-uses-cross-domain-cookies/">http://nfriedly.com/techblog/2010/08/how-facebook-sets-and-uses-cross-domain-cookies/</a></p>

<p>[4] HTML5 localStorage本地存储实际应用举例, <a href="http://www.zhangxinxu.com/wordpress/2011/09/html5-localstorage%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B/">http://www.zhangxinxu.com/wordpress/2011/09/html5-localstorage%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B/</a></p>

<p>[5] EverCookie, <a href="https://github.com/samyk/evercookie">https://github.com/samyk/evercookie</a></p>

<p>[6] Anehta的水印(Watermark)机制, <a href="http://hi.baidu.com/aullik5/item/89496d121de969041894ecdd">http://hi.baidu.com/aullik5/item/89496d121de969041894ecdd</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node_zk_browser安装时的一个问题]]></title>
    <link href="http://cxh.me/2014/11/19/error-with-node-zk-browser/"/>
    <updated>2014-11-19T18:56:00+08:00</updated>
    <id>http://cxh.me/2014/11/19/error-with-node-zk-browser</id>
    <content type="html"><![CDATA[<p>  zookeeper基本是基于API和console进行znode的操作，并没有一个比较方便的操作界面，taobao 伯岩大神写过一个工具node_zk_browser，可以比较方便的查询zookeeper信息。地址在</p>

<pre><code>https://github.com/killme2008/node-zk-browser
</code></pre>

<p>  界面如下所示：</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/zk_browser.png" title="zk_browser" alt="zk_browser"><p class="align-center">zk_browser</p></p>

<p>  安装的时候遇到一个问题</p>

<pre><code>Downloading zookeeper-3.4.3 from http://apache.mirrors.tds.net/zookeeper/zookeeper-3.4.3/zookeeper-3.4.3.tar.gz
</code></pre>

<p>  这个地址是找不到的。apache的这个mirror上只有3.4.6的包了。改package.json也没用。表示不懂node.js，不知道npm去哪里找的url。</p>

<p>  但是我们可以这样绕过去。先到其他的路径下：</p>

<pre><code>npm install zookeeper
</code></pre>

<p>  这会安装最新的node-zookeeper，安装完毕之后生成一个node_modules目录，下面有一个zookeeper目录，直接复制这个目录到node-zk-browser下面的node_modules目录里。</p>

<p>  搞定。</p>

<h3>参考文献:</h3>

<blockquote><p>[1] Zookeeper的web管理应用, <a href="http://www.blogjava.net/killme2008/archive/2011/06/06/351793.html">http://www.blogjava.net/killme2008/archive/2011/06/06/351793.html</a></p>

<p>[2] node-zookeeper安装小记, <a href="http://blog.izturn.mobi/post/15025383777/node-zookeeper-install-note">http://blog.izturn.mobi/post/15025383777/node-zookeeper-install-note</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[du显示只显示一层子目录/文件的大小]]></title>
    <link href="http://cxh.me/2014/11/13/du-to-display-one-level/"/>
    <updated>2014-11-13T17:55:00+08:00</updated>
    <id>http://cxh.me/2014/11/13/du-to-display-one-level</id>
    <content type="html"><![CDATA[<p>  经常需要看当前目录下的子目录大小，比如开发机被人占满的情况，<code>du -lh</code>显示的是递归的所有文件大小，<code>du -s</code>又只统计了所有文件/文件夹合起来的大小。正常情况下需要执行：</p>

<pre><code>du -lh --max-depth=1
</code></pre>

<p>  未免太过麻烦。后来肖总提示发现这样就行了：</p>

<pre><code>du -sh *
</code></pre>

<p>  果然是学无止境啊</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[虚函数模板和模板类中的虚函数]]></title>
    <link href="http://cxh.me/2014/10/29/cpp-virtual-template-function/"/>
    <updated>2014-10-29T21:05:00+08:00</updated>
    <id>http://cxh.me/2014/10/29/cpp-virtual-template-function</id>
    <content type="html"><![CDATA[<p>  自从知道了C++不支持虚函数模板之后就觉得相关的一概不支持，今天写程序的时候想把基类做成模板，然后继承基类。以为也不支持，写了一下才发现支持的，无论是非模板类继承一个特化之后的模板还是模板类继承包含虚函数的模板基类都是没问题的。从实现上看，反正使用的时候都会特化的，特化之后虚函数表指针是固定的。不存在像函数模板这种类生成的时候无法确定虚函数表的情况。</p>

<p>  例子如下：</p>

<!--more-->


<pre><code>enum SessionType
{
  ROSession,
  RWSession,
  RPSession
};
class BaseTransCtx
{
  public:
    BaseTransCtx (){}
    virtual ~BaseTransCtx (){}
};
template&lt;typename Type&gt;
class ISessionCtxFactory
{
  public:
    ISessionCtxFactory(){};
    ~ISessionCtxFactory() {};
  public:
    virtual BaseTransCtx *alloc(const Type type) = 0;
    virtual void free(BaseTransCtx *ptr) = 0;
};
typedef ISessionCtxFactory&lt;SessionType&gt; SessionMgr;
class TransSessionMgr: public SessionMgr
{
  public:
    TransSessionMgr (){}
    virtual ~TransSessionMgr (){}

    BaseTransCtx *alloc(const SessionType type)
    {
      return NULL;
    }

    void free(BaseTransCtx *ptr)
    {
      if (ptr != NULL)
      {
        delete ptr;
      }
    }
};
int main(int argc, const char *argv[])
{
  TransSessionMgr trans;
  BaseTransCtx* ctx = trans.alloc(RWSession);
  trans.free(ctx);
  return 0;
}
</code></pre>

<p>  模板类继承虚基类也可以。</p>

<pre><code>template&lt;typename Type&gt;
class ISessionCtxFactory
{
  public:
    ISessionCtxFactory(){};
    ~ISessionCtxFactory() {};
  public:
    virtual BaseTransCtx *alloc(const Type type) = 0;
    virtual void free(BaseTransCtx *ptr) = 0;
};
template&lt;typename Type&gt;
class TransSessionMgr: public ISessionCtxFactory&lt;Type&gt;
{
  public:
    TransSessionMgr (){}
    virtual ~TransSessionMgr (){}

    BaseTransCtx *alloc(const Type type)
    {
      return NULL;
    }

    void free(BaseTransCtx *ptr)
    {
      if (ptr != NULL)
      {
        delete ptr;
      }
    }
};
</code></pre>

<p>  但是这样就不行了</p>

<pre><code>class ISessionCtxFactory
{
  public:
    ISessionCtxFactory(){};
    ~ISessionCtxFactory() {};
  public:
    template&lt;typename Type&gt;
      virtual BaseTransCtx *alloc(const Type type) = 0;
    virtual void free(BaseTransCtx *ptr) = 0;
};
class TransSessionMgr: public ISessionCtxFactory
{
  public:
    TransSessionMgr (){}
    virtual ~TransSessionMgr (){}

    template&lt;typename Type&gt;
      BaseTransCtx *alloc(const Type type)
      {
        return NULL;
      }

    void free(BaseTransCtx *ptr)
    {
      if (ptr != NULL)
      {
        delete ptr;
      }
    }
};
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[澄清几个关于C++继承的问题]]></title>
    <link href="http://cxh.me/2014/10/28/cpp-derive-problems/"/>
    <updated>2014-10-28T15:56:00+08:00</updated>
    <id>http://cxh.me/2014/10/28/cpp-derive-problems</id>
    <content type="html"><![CDATA[<p>  之前讨论编码规范的时候遇到过一个问题，继承的类覆盖基类的虚函数，不写virtual关键字是否依然有覆盖（override)的效果。是个基础问题，但是大家的理解好像都不一样。验证如下：</p>

<pre><code>#include &lt;stdio.h&gt;
class Base
{
  public:
    Base (){}
    virtual ~Base (){}
    virtual void print() {printf("Base\n");}
};

class Middle : public Base
{
  public:
    Middle(){}
    virtual ~Middle(){}
    void print() {printf("Middle\n");}
};

class Derived : public Middle
{
  public:
    Derived(){}
    virtual ~Derived(){}
    void print() {printf("Derived\n");}
};

int main(int argc, const char *argv[])
{
  Base * p = NULL;
  Base b;
  Middle m;
  Derived d;
  p = &amp; b;
  p-&gt;print();
  p = &amp; m;
  p-&gt;print();
  p = &amp; d;
  p-&gt;print();
  return 0;
}
</code></pre>

<!--more-->


<p>  结果是</p>

<pre><code>Base
Middle
Derived
</code></pre>

<p>  可见只要定义了virtual关键字，在整个继承体系中这个函数都会成为虚函数。第二个问题是作为一个中间类（Middle)不想覆盖基类的虚函数，默认的情况下有什么影响。猜想应该就默认用了基类的虚函数。不影响后面的继承关系。注释掉Middle的print函数实现。结果如下：</p>

<pre><code>Base
Base
Derived
</code></pre>

<p>  跟预想一致。水文一篇，可忽略。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[析构函数和成员析构的先后顺序]]></title>
    <link href="http://cxh.me/2014/10/22/destruct-and-member-destruct/"/>
    <updated>2014-10-22T17:57:00+08:00</updated>
    <id>http://cxh.me/2014/10/22/destruct-and-member-destruct</id>
    <content type="html"><![CDATA[<p>  肖总问到这个问题，写了个程序验证：</p>

<pre><code>class Member
{
 public:
   Member (){}
   virtual ~Member (){printf("member destruct\n");}
};
class Base
{
  public:
    Base (){}
    virtual ~Base (){ printf("destruct\n");}
  private:
    Member member_;
};
int main(int argc, const char *argv[])
{
  Base c;
  return 0;
}
</code></pre>

<p>  结果是：</p>

<pre><code>  destruct
  member destruct
</code></pre>

<p>  可见析构的时候先调用析构函数，最后析构成员对象。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分布式系统/NOSQL入门书单]]></title>
    <link href="http://cxh.me/2014/10/20/distribute-system-guide/"/>
    <updated>2014-10-20T11:26:00+08:00</updated>
    <id>http://cxh.me/2014/10/20/distribute-system-guide</id>
    <content type="html"><![CDATA[<p>  简单记一下我看过的和觉得值得看的。主要是给@赵龙作为参考。</p>

<ul>
<li>分布式相关</li>
</ul>


<blockquote><p>[1] 大规模分布式存储系统, <a href="http://book.douban.com/subject/25723658/">http://book.douban.com/subject/25723658/</a>
  阿里日照的书，全面介绍了分布式系统的原理和实践，入门不可多得的书</p>

<p>[2] 分布式系统原理介绍, <a href="http://blog.sciencenet.cn/home.php?mod=attachment&amp;id=31413">http://blog.sciencenet.cn/home.php?mod=attachment&amp;id=31413</a>
  百度刘杰的，讲基本的分布式原理，有些笔误什么的。</p>

<p>[3] paxos算法相关, <a href="http://cxh.me/2014/08/26/paxos-study/">http://cxh.me/2014/08/26/paxos-study/</a>
  总结了paxos算法一些资料。</p>

<p>[5] 分布式数据库系统原理, <a href="http://product.dangdang.com/23466507.html">http://product.dangdang.com/23466507.html</a>
  分布式数据库的一本教材。</p>

<p>[6] The Raft Consensus Algorithm, <a href="http://raftconsensus.github.io/">http://raftconsensus.github.io/</a>
  raft相关的资料，论文和一些实现都能在里面找到，另外有一个图形化的展示很方便。</p>

<p>[7] Raft介绍, <a href="http://www.slideboom.com/presentations/956855/Raft%E4%BB%8B%E7%BB%8D">http://www.slideboom.com/presentations/956855/Raft%E4%BB%8B%E7%BB%8D</a>
  raft的一个ppt。</p></blockquote>

<ul>
<li>数据库相关</li>
</ul>


<blockquote><p>[1] 数据库系统实现, <a href="http://item.jd.com/10060181.html">http://item.jd.com/10060181.html</a>
  数据库的一本教材，偏重于实现。</p>

<p>[2] 数据挖掘概念与技术, <a href="http://book.douban.com/subject/2038599/">http://book.douban.com/subject/2038599/</a>>[3] 事务相关, <a href="http://cxh.me/2014/07/02/article-on-transaction/">http://cxh.me/2014/07/02/article-on-transaction/</a></p>

<p>[3] 事务相关, <a href="http://cxh.me/2014/07/02/article-on-transaction/">http://cxh.me/2014/07/02/article-on-transaction/</a>
  总结了事务相关的一些资料。</p></blockquote>

<ul>
<li>NOSQL相关</li>
</ul>


<blockquote><p>[1] Dynamo论文, <a href="http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf">http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf</a></p>

<p>[2] bigtable论文, <a href="http://research.google.com/archive/bigtable-osdi06.pdf">http://research.google.com/archive/bigtable-osdi06.pdf</a></p>

<p>[3] gfs论文, <a href="http://research.google.com/archive/gfs-sosp2003.pdf">http://research.google.com/archive/gfs-sosp2003.pdf</a></p>

<p>[4] map reduce论文, <a href="http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf">http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf</a></p>

<p>[5] Redis 设计与实现, <a href="http://redisbook.com/en/latest/">http://redisbook.com/en/latest/</a>
  一本不错的讲redis的书。</p>

<p>[6] 数据分析与处理之二（Leveldb 实现原理）, <a href="http://www.cnblogs.com/haippy/archive/2011/12/04/2276064.html">http://www.cnblogs.com/haippy/archive/2011/12/04/2276064.html</a>
  leveldb的实现。</p>

<p>[7] Memcached 源码剖析笔记, <a href="http://files.cppblog.com/xguru/Memcached.pdf">http://files.cppblog.com/xguru/Memcached.pdf</a>
  memcache的源码。</p></blockquote>

<ul>
<li>基础</li>
</ul>


<blockquote><p>[1] UNIX环境高级编程, <a href="http://book.douban.com/subject/1788421/">http://book.douban.com/subject/1788421/</a></p>

<p>[2] UNIX网络编程, <a href="http://book.douban.com/subject/1500149/">http://book.douban.com/subject/1500149/</a></p></blockquote>

<ul>
<li>一些博客</li>
</ul>


<blockquote><p>[1] 银河里的星星的博客, <a href="http://duanple.blog.163.com/">http://duanple.blog.163.com/</a>
  主要是分布式领域的论文和翻译。</p>

<p>[2] 章炎的技术博客, <a href="http://dirlt.com/">http://dirlt.com/</a></p>

<p>[3] 何登成的技术博客, <a href="http://hedengcheng.com/">http://hedengcheng.com/</a> 大牛不解释</p>

<p>[4] 淘宝核心系统团队博客, <a href="http://csrd.aliapp.com/">http://csrd.aliapp.com/</a></p>

<p>[5] 吴镝 <a href="http://www.cnblogs.com/foxmailed/">http://www.cnblogs.com/foxmailed/</a> 专注系统，基础架构，分布式系统</p></blockquote>

<p>  都看还是需要时间的，我只是读完了一部分翻完了一部分，很多还需要再看一遍。分布式系统最好的学习方法当时是实现一个分布式系统，像晓楚<a href="https://github.com/raywill/macraykv" title="Macrakv">macrakv</a>这样，但是工程量和难度比较大，退而求其次的办法是看源码，redis/hbase/leveldb/memcached都是不错的例子。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自动生成ifdef标记和作者信息的插件]]></title>
    <link href="http://cxh.me/2014/10/11/ifdef-generator/"/>
    <updated>2014-10-11T14:28:00+08:00</updated>
    <id>http://cxh.me/2014/10/11/ifdef-generator</id>
    <content type="html"><![CDATA[<p>  针对团队开发为了统一代码风格往往有比较严格的代码规范。为了自动化的生成一些不变的内容，写了如下两个插件（有的是改动）：</p>

<blockquote><ol>
<li>ifdef.vim 生成ifndef标记，防止重复包含。</li>
<li>author_info.vim 生成更新作者信息版权声明</li>
</ol>
</blockquote>

<p>  详见<a href="https://github.com/chenxiaohui/ifdef_generator">https://github.com/chenxiaohui/ifdef_generator</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[夜景几张]]></title>
    <link href="http://cxh.me/2014/09/08/ffc-pictures/"/>
    <updated>2014-09-08T21:25:00+08:00</updated>
    <id>http://cxh.me/2014/09/08/ffc-pictures</id>
    <content type="html"><![CDATA[<p>  实在是镜头决定了成败，套头拍月亮基本是对不上焦的节奏，只能拍拍旁边的楼了。财富金融中心，应该是北京最高的写字楼了。貌似有跑焦。</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/ffc_dark.jpg" title="FFC" alt="FFC"><p class="align-center">FFC</p></p>

<!--more-->


<p>  再贴一张曝光长一点的。</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/ffc_light.jpg" title="FFC" alt="FFC"><p class="align-center">FFC</p></p>

<p>  以及裤衩沐浴在月光中的&hellip;</p>

<p>  <img class="img-polaroid center" src="http://cxh.me/images/2014/moon.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[永不分开，世界的爱]]></title>
    <link href="http://cxh.me/2014/09/08/the-love-of-the-world/"/>
    <updated>2014-09-08T20:03:00+08:00</updated>
    <id>http://cxh.me/2014/09/08/the-love-of-the-world</id>
    <content type="html"><![CDATA[<p>  这应该算是很古老很古老的一首歌了，当时赵薇还是个青涩的小燕子。2000年的时候还在上初中，实在不理解新千年的意义。现在回想起来，新千年的到来，对人类来说，实在是个有着难以名状的意义。20世纪前半叶的多灾多难，后半叶的冷战阴云，没有哪个世纪会产生如此重大的人类群体性灾难。旧的秩序被打破，核战争的阴云，武器发展到批量化的收割人命，20世纪可能是人类历史上绝无仅有一个世纪。</p>

<p>  从这个角度想，这首歌真是充满了感慨。停留在20世纪的末尾，回首这一个多灾多难的世纪，看人类从错误中反省，最终一起站在新千年的入口展望未来。某种意义上说，人类第一次站在一起迎接和平，憧憬未来。这其中的意味可能只有经历过苦难的人才体会的出来，虽然2000年的时候局部战争依然在进行着。</p>

<p>  一首歌的意味只有联想到背景才体会得到啊，不知道有多少人还记得这首歌了。不妨回味。</p>

<p>  <embed src="http://player.yinyuetai.com/video/player/438643/v_0.swf" quality="high" width="480" height="334" align="middle"  allowScriptAccess="sameDomain" allowfullscreen="true" type="application/x-shockwave-flash"></embed></p>
]]></content>
  </entry>
  
</feed>
