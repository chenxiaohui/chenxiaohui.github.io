<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: PHP | CXH.ME]]></title>
  <link href="http://cxh.me/category/php/atom.xml" rel="self"/>
  <link href="http://cxh.me/"/>
  <updated>2016-07-04T16:41:47+08:00</updated>
  <id>http://cxh.me/</id>
  <author>
    <name><![CDATA[Harry Chen]]></name>
    <email><![CDATA[sdqxcxh@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Phibricator搭建过程总结]]></title>
    <link href="http://cxh.me/2015/07/07/phibricator-setup/"/>
    <updated>2015-07-07T17:45:00+08:00</updated>
    <id>http://cxh.me/2015/07/07/phibricator-setup</id>
    <content type="html"><![CDATA[<p>  <a href="http://phabricator.org/" title="Phibricator官网">Phibricator</a>是Facebook开源的一体化项目管理、代码review工具，主要特点是集成度高、界面漂亮。根据搭建的经验看，确实做的非常完善，各种细节用起来像是商业产品，不会像其他的开源产品那么难以配置。这里把配置过程根据回忆写一下：</p>

<p>  官方给出过一个一键安装的脚本，但是下载的时候感觉有点问题吧，下载完不是sh而是网页，而且我只有一台机器，环境都已经预先有了，也不想再搭一套LAMP。这里我们以centos5为例：</p>

<p>  首先安装httpd + mysql + php，由于centos5的版本太低，yum源里的mysql和php均低于phibricator要求的版本，我们需要先升级yum源，参见<a href="http://zengrong.net/post/1595.htm" title="升级CentOS 5.x中的PHP 5.1到5.3">参考文献</a>， 不过好像安装的时候没有php53u，而是直接php53</p>

<p>  之后把对应的扩展也装了:</p>

<pre><code>yum install php53-mbstring
yum install php53-mysql
</code></pre>

<!--more-->


<p>  升级mysql到mysql5.5，参见<a href="http://www.ha97.com/4145.html" title="RHEL/CentOS 5.x使用yum快速安装MySQL 5.5.x">参考文献</a>。中间遇到两个问题:</p>

<ol>
<li><p>mysql 启动失败，提示没有权限创建pid。su到mysql用户下发现/var/run目录mysql用户没有execute的权限：</p>

<p> usermod +x /var/run</p>

<p> 给目录加execute的权限</p></li>
<li><p>mysql_upgrade失败，直接提示FATAL ERROR:Upgrade failed，发现用户名密码的问题，root@localhost密码没变，root@127.0.0.1在升级之后好像没有密码了</p>

<p> SET PASSWORD FOR &lsquo;root&rsquo;@&lsquo;127.0.0.1&rsquo; = PASSWORD(&lsquo;newpass&rsquo;);</p>

<p> 重新设置密码。</p></li>
</ol>


<p>  之后去/var/www/html安装源码:</p>

<pre><code>$ git clone https://github.com/phacility/libphutil.git
$ git clone https://github.com/phacility/arcanist.git
$ git clone https://github.com/phacility/phabricator.git
</code></pre>

<p>  顺便装上一些别的php扩展：</p>

<pre><code>sudo yum install pcre-devel
sudo yum install php-pear
sudo yum install php53-process
sudo pecl install apc
</code></pre>

<p>  主要是提升性能的。然后配置httpd.conf</p>

<pre><code>&lt;VirtualHost *&gt;
  # Change this to the domain which points to your host.
  ServerName phabricator.example.com

  # Change this to the path where you put 'phabricator' when you checked it
  # out from GitHub when following the Installation Guide.
  #
  # Make sure you include "/webroot" at the end!
  DocumentRoot /path/to/phabricator/webroot

  RewriteEngine on
  RewriteRule ^/rsrc/(.*)     -                       [L,QSA]
  RewriteRule ^/favicon.ico   -                       [L,QSA]
  RewriteRule ^(.*)$          /index.php?__path__=$1  [B,L,QSA]
&lt;/VirtualHost&gt;
</code></pre>

<p>  最后一个Rule的B在我的httpd下不识别，所以直接去掉了，貌似没什么影响&hellip;重启之后到phibricator的源码目录执行：</p>

<pre><code>phabricator/ $ ./bin/storage upgrade
</code></pre>

<p>  按照提示可以配置mysql 用户名密码，之后可以看到建立了数据库结构。这时候访问host就能看到界面了。先注册管理员进去，能够看到一系列的TIPs，说明需要配置的地方。Phibricator在这方面非常人性化，按照提示一点点配置就可以了。直到解决大部分的warning。剩下的问题就是注册用户和邮件了。</p>

<p>  首先在auth上开启认证方式，这里我们还是比较传统，选择了用户名密码的方式，你也可以选择其他账号体系打通的方式。一个用户注册之后，管理员需要批准用户，这个用户才能登陆。我找了好久，才发现原来批准在这位置：</p>

<p>  <img class="img-polaroid center" src="/images/2015/approval-queue.png"></p>

<p>  最后是配置邮件服务器。首先你需要有个本地的或者其他提供商提供的邮件服务器。可以参考<a href="http://blog.csdn.net/lihongxun945/article/details/9030753" title="phabricator 邮件服务配置 备忘">这里</a>，PHP Mailer设置：</p>

<pre><code>phpmailer.mailer: set to "smtp".
phpmailer.smtp-host: smtp.xxx.com
phpmailer.smtp-port: 25
phpmailer.smtp-user: xxxx
phpmailer.smtp-password: xxxx
</code></pre>

<p>  之后重启daemon应该就能发送邮件了。删除用户非常有意思，ph只允许从命令行删除</p>

<pre><code>phabricator/ $ ./bin/remove destroy @harrychen
</code></pre>

<p>  之后会有一个有意思的界面：</p>

<p><img class="img-polaroid center" src="/images/2015/delete-user.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache地址重写的几个问题]]></title>
    <link href="http://cxh.me/2012/04/02/some-problems-about-apache-address-rewrite/"/>
    <updated>2012-04-02T00:00:00+08:00</updated>
    <id>http://cxh.me/2012/04/02/some-problems-about-apache-address-rewrite</id>
    <content type="html"><![CDATA[<p>#</p>

<p>  Apache地址重写的配置分为两种方式即通过httpd.conf配置和.htaccess文件。</p>

<p>  首先要打开rewrite模块windows下的配置是</p>

<pre><code>LoadModule rewrite_module modules/mod_rewrite.so
</code></pre>

<p>  httpd.conf的配置可以全局生效也可以只配置一个目录需要做的事情是在相应目录的Directory标签下配置Rewrite规则。</p>

<p>  .htaccess的则放到相应目录下或者根目录即可这是VPS里常用的一种方式毕竟作为一个VPS购买者不可能要求提供商去更改全局配置文件。这种方式需要注意的有如下两点</p>

<p>  首先.htaccess要想起作用必须要在httpd.conf中相应的Directory标签下配置AllowOverride All默认是None其次是windows下这种无文件名仅有扩展名的文件是无法直接生成的可以在cmd窗口下使用copy con命令来生成这命令也有年头了我小学的时候还学过光阴荏苒啊扯远了…Ctrl Z保存。</p>

<p>  <img src="http://www.roybit.com/wp-content/uploads/2012/04/image_thumb.png" title="image" alt="image" /></p>

<p>  然后我们说一下几个概念。</p>

<p>  首先是RewriteEngine这是地址重写的引擎可以方便的设置为On或者Off来启用和关闭引擎。</p>

<p>  其次是RewriteCond地址重写的条件符合这个条件的才进行表达式判断和重写这样能有效减少匹配的条数提高重写效率。</p>

<p>  最后是RewriteBase和RewriteRuleRewriteBase指明重定向地址的基础即RewriteRule后一部分重定向地址会拼合上RewriteBase合成一个完整的重定向地址。这在一个web容器下有多个网站的时候比较有用。</p>

<p>  RewriteRule才是我们讨论的主要话题。RewriteRule实现把符合表达式的地址重定向到另一个地址的功能RewriteRule的语法类似于下面</p>

<pre><code>RewriteRule ^forum-([0-9] )-([0-9] )\\.html$ forumdisplay.php?fid=$1&amp;page=$2
</code></pre>

<p>  RewriteRule紧跟着判断表达式之后是需要重定向的位置正则表达式()会捕获一个分组然后通过$n引用这个分组从而实现地址重写。RewriteRule匹配的开始位置是整个URL去掉当前目录后剩下的部分比如我在/discuz配置上面所示的RewriteRule然后输入一个URL-<a href="http://localhost/discuz/forum-1-1.html%E8%A2%AB%E7%94%A8%E6%9D%A5%E5%8C%B9%E9%85%8D%E7%9A%84%E8%BE%93%E5%85%A5%E4%BC%9A%E6%98%AFforum-1-1.html%E4%B9%9F%E5%B0%B1%E6%98%AF%E5%89%8D%E9%9D%A2%E7%9A%84/discuz/%E8%A2%AB%E5%90%83%E6%8E%89%E4%BA%86%E3%80%82%E5%AF%B9%E4%BA%8E%E6%95%B4%E4%B8%AA%E9%97%AE%E9%A2%98%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%A6%82%E4%B8%8B%E7%9A%84%E8%AF%AD%E5%8F%A5%E9%AA%8C%E8%AF%81%E3%80%82">http://localhost/discuz/forum-1-1.html%E8%A2%AB%E7%94%A8%E6%9D%A5%E5%8C%B9%E9%85%8D%E7%9A%84%E8%BE%93%E5%85%A5%E4%BC%9A%E6%98%AFforum-1-1.html%E4%B9%9F%E5%B0%B1%E6%98%AF%E5%89%8D%E9%9D%A2%E7%9A%84/discuz/%E8%A2%AB%E5%90%83%E6%8E%89%E4%BA%86%E3%80%82%E5%AF%B9%E4%BA%8E%E6%95%B4%E4%B8%AA%E9%97%AE%E9%A2%98%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%A6%82%E4%B8%8B%E7%9A%84%E8%AF%AD%E5%8F%A5%E9%AA%8C%E8%AF%81%E3%80%82</a></p>

<pre><code> RewriteRule ^(.*)/forum-([0-9] )-([0-9] )\\.html$ rewrite.php?param=$1
</code></pre>

<blockquote><p>注在rewrite.php里打印一下GET[&lsquo;param’]参数</p></blockquote>

<p>  另外这里需要说明的是如果我定义了</p>

<pre><code>RewriteBase /discuz
</code></pre>

<p>  那么前面的<sup>forum</sup>-([0-9] )&ndash;([0-9] )\.html$不受影响但是后面会变成/discuz/forumdisplay.php?fid=$1&amp;page=$2。不过RewriteBase并不是必须的若有指定RewriteBase结果为RewriteBase 重定向地址否则为当前目录 重定向地址。这里当前目录指的是.htaccess所在目录使用.htaccess的时候或者Directory标签指定的目录使用httpd.conf的时候。</p>

<p>  以上操作在windows下测试通过。</p>

<p>  参考文献</p>

<p>  <a href="http://www.roybit.com/wp-content/uploads/2012/04/image_thumb.png" title="image">1</a>Apache中RewriteCond规则参数介绍</p>

<p>  <a href="http://hi.baidu.com/%D2%BB/blog/item/ace7f14e19851cc4d0c86af2.html">http://hi.baidu.com/һ/blog/item/ace7f14e19851cc4d0c86af2.html</a></p>

<p>  <a href="http://hi.baidu.com/%D2%BB/blog/item/ace7f14e19851cc4d0c86af2.html">2</a>RewriteRule-htaccess详细语法使用教程</p>

<p>  <a href="http://www.3code.cn/rewriterule-htaccess%E8%AF%A6%E7%BB%86%E8%AF%AD%E6%B3%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/">http://www.3code.cn/rewriterule-htaccess详细语法使用教程/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows下64位PHP+Mysql+Apache的安装配置]]></title>
    <link href="http://cxh.me/2011/09/23/php-apache-mysql-configuration-under-windows-x64/"/>
    <updated>2011-09-23T00:00:00+08:00</updated>
    <id>http://cxh.me/2011/09/23/php-apache-mysql-configuration-under-windows-x64</id>
    <content type="html"><![CDATA[<p>  实际上和32的差别并不大，写这篇文章的主要目的是给出可行的下载地址。</p>

<blockquote><p>PHPx64</p>

<p>Apachex64</p>

<p>Mysqlx64</p>

<p><a href="http://dl-sh-ocn-1.pchome.net/0t/fw/mysql-essential-5.0.90-winx64.rar" title="http://dl-sh-ocn-1.pchome.net/0t/fw/mysql-essential-5.0.90-winx64.rar">http://dl-sh-ocn-1.pchome.net/0t/fw/mysql-essential-5.0.90-winx64.rar
</a></p></blockquote>

<p>  然后安装mysql，apache和php直接解压就行，php.ini做如下几处修改</p>

<pre><code>#扩展目录
extension_dir = "../php/ext"
#mysql扩展
extension=php_mysql.dll
#剩下的酌情自己配置
</code></pre>

<p>  httpd.conf做如下几处修改</p>

<pre><code>#主目录
ServerRoot "D:/Program Files/httpd-2.2-x64"
#LoadPHP的模块
LoadModule php5_module "D:/Program Files/php/php5apache2_2.dll"
PHPIniDir "D:/Program Files/php/"
#文档目录
DocumentRoot "d:/temporary/php"
#文档目录的权限配置

#默认访问文件名
DirectoryIndex index.php default.php index.html
#解析文档类型，这里很重要，否则无法解析php
AddType application/x-httpd-php .php  .php4 .php5 .html
</code></pre>

<p>  拷贝libmysql.dll（mysql的bin目录下）到system32和apache的bin目录。</p>

<p>  以管理员身份运行命令行，执行如下命令</p>

<pre><code>httpd -k install
</code></pre>

<p>  在执行 httpd -k install 的时候，显示 The Apache2.2 service is successfully installed 表明已经安装成功。</p>

<p>  然后执行</p>

<pre><code>httpd -k start
</code></pre>

<p>  启动apache即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chrome自动发送邮件插件]]></title>
    <link href="http://cxh.me/2011/08/28/chrome-plugin-to-send-mails-automatically/"/>
    <updated>2011-08-28T00:00:00+08:00</updated>
    <id>http://cxh.me/2011/08/28/chrome-plugin-to-send-mails-automatically</id>
    <content type="html"><![CDATA[<p>  写这个插件的最初的原因是实验室的网络无法同步Chrome书签，同时有时候需要与宿舍的笔记本同步一些文本信息，所以琢磨自己写一个同步插件。</p>

<p>  但是偌大一个教育网，竟然找不到一个可用的在线存储服务，金山快盘已经叫嚣要开放API很久了，但是就是没见到官方的API手册。最后想来想去，干脆用邮件算了，最终的 程序结构如下：</p>

<p>  <img src="http://www.roybit.com/wp-content/uploads/2011/08/thumb.png" title="程序结构" alt="程序结构" /></p>

<p>  Chrome插件的开发参考了ClickTrans<a href="http://www.roybit.com/wp-content/uploads/2011/08/thumb.png" title="程序结构">1</a>的开发，源码可以在<a href="http://www.roybit.com/wp-content/uploads/2011/08/chrome%E6%8F%92%E4%BB%B61.rar">这里</a>下载，使用的时候在浏览器里右键，就会有Save选项，如果选择了文本，就把文本发送到邮件，否则发送当前链接地址。具体实现不解释，可以参考代码，简单说下Chrome插件的一些东东。</p>

<p>  Chrome插件实际上是一组JS的脚本 配置文件，可能还有Html的页面，Chrome本身提供一些API接口，剩下的就通过JS来操作页面元素实现。Chrome插件里比较重要的两个东东，一个是页面，包括了BackGround页，Popup页（Popup页又分Page_Action和Browser_Action），另一个是向页面注入的JS脚本。因为插件自己的脚本并不能直接操作Web页，所以必须要向页面注入一个脚本才能进行页面操作。Chrome的API可以通过这里<a href="http://www.roybit.com/wp-content/uploads/2011/08/chrome%E6%8F%92%E4%BB%B61.rar">2</a>查询，自己的脚本和注入脚本之间的通信参见ClickTrans<a href="http://www.roybit.com/wp-content/uploads/2011/08/thumb.png" title="程序结构">1</a>的文章。</p>

<p>  最后不得不提的一个东西，JS本身是无法实现SMTP协议的，或者说没人做，需要发送邮件的时候必须借助其他Web语言，通过服务的形式调用，我是写了一个简单的PHP响应请求并发送邮件的程序，具体代码如下，重要的不是代码，而是PHP下mail的配置，详见配置win下的sendmail<a href="http://www.php.net/if">3</a></p>

<p>  Chrome插件的代码里固定了一个邮件服务的地址，localhost/test/send.php，如果需要请自行更改然后打包，有空再做成可配置的，然后放到SinaAppEngine上，这样就方便访问了，否则总得本地起服务，太费劲了。</p>

<p>参考文献</p>

<p><a href="http://www.roybit.com/wp-content/uploads/2011/08/thumb.png" title="程序结构">1</a> 从无到有制作Chrome扩展：ClickTrans，</p>

<p><a href="http://www.roybit.com/wp-content/uploads/2011/08/chrome%E6%8F%92%E4%BB%B61.rar">2</a> Chrome扩展API参考，</p>

<p><a href="http://www.php.net/if">3</a> php mail函数在win下的使用，以及配置win下的sendmail</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于php编码一个弱弱的问题]]></title>
    <link href="http://cxh.me/2011/06/24/a-problem-about-php-encoding/"/>
    <updated>2011-06-24T00:00:00+08:00</updated>
    <id>http://cxh.me/2011/06/24/a-problem-about-php-encoding</id>
    <content type="html"><![CDATA[<p>  晚上调Xpath的一个程序，从网页里读出来的数据然后显示到网页一直是乱码……乱码啊乱码……都快疯了，最后发现从来没想过这个问题：</p>

<p>  你echo回来的网页，浏览器凭什么知道你的编码?</p>

<p>  于是乎，指定一下header，保证跟你echo到网页的编码一致，就OK了……这个问题好囧。</p>

<blockquote><pre><code>header("Content-type: text/html; charset=gb2312");
</code></pre></blockquote>
]]></content>
  </entry>
  
</feed>
