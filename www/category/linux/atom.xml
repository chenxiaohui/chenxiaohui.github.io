<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | CXH.ME]]></title>
  <link href="http://cxh.me/category/linux/atom.xml" rel="self"/>
  <link href="http://cxh.me/"/>
  <updated>2015-04-03T19:37:58+08:00</updated>
  <id>http://cxh.me/</id>
  <author>
    <name><![CDATA[Harry Chen]]></name>
    <email><![CDATA[sdqxcxh@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于sendmail邮件服务器的搭建]]></title>
    <link href="http://cxh.me/2015/04/01/something-about-sendmail-setup/"/>
    <updated>2015-04-01T20:14:00+08:00</updated>
    <id>http://cxh.me/2015/04/01/something-about-sendmail-setup</id>
    <content type="html"><![CDATA[<p>  还是reviewboard的事情，我们需要一个自己的邮件服务器来发通知邮件。sendmail是一个比较好的选择，搭建的方式很简单，安装sendmail，修改配置文件，修改local_host_name就行。如果不需要登陆验证，这样也就直接能用了。现在的问题是reviewboard是必须登陆验证的。至少看报错上是这样。</p>

<pre><code>SMTPException: SMTP AUTH extension not supported by server. reviewboard
</code></pre>

<p>  具体代码没细看，但是应该默认都有认证，只是认证方式不一样。我们telnet到25端口，执行</p>

<pre><code>ehlo localhost
</code></pre>

<p>  发现250 AUTH没有支持。所以需要配置邮件服务器的身份认证。详见<a href="http://blog.sina.com.cn/s/blog_6b61ec070101e161.html" title="CentOS sendmail安装及邮件域名配置">参考文献1</a><a href="http://ju.outofmemory.cn/entry/12533" title="testsaslauthd “authentication failed” 解决办法">参考文献2</a>。最后测试一下用户是否能通过验证和邮件能否正常发送：</p>

<pre><code>/usr/sbin/testsaslauthd -u username -p sohutest

mail -s "test" xxx@xxx.com &lt;content.txt
</code></pre>

<p>  如果邮件不能正常发送可以通过如下方式debug：</p>

<pre><code>1. 查看/var/log/messages
2. 查看用户mail
3. 通过telnet模拟一下登陆发邮件的过程：

        HELO localhost
        AUTH LOGIN 
        aGFycnljaGVu
        c29odXRlc3Q=
        MAIL FROM:&lt;test@xxx.com&gt;
        RCPT TO:&lt;username@xxx.com&gt;
        DATA
        To: username@xxx.com
        From:test@xxx.com
        Subject:test mail
        From:test@xxx.com
        test body
        .
        quit
</code></pre>

<p>  安装reviewboard的过程还发现一个问题，邮件服务器已经可以正常发邮件了，reviewboard还是失败，看到如下报错：</p>

<pre><code>- Error sending e-mail notification with subject 'Review Request 2: [retrieval-ad][master][NewFeature] Readme' on behalf of '"UserName" &lt;xxx@xxx.com&gt;' to '"UserName" &lt;xxx@xxx.com&gt;,xxx@xxx.com'
Traceback (most recent call last):
  File "/opt/xxx/rb/lib/python2.7/site-packages/ReviewBoard-2.0.15-py2.7.egg/reviewboard/notifications/email.py", line 294, in send_review_mail
    message.send()
  File "/opt/xxx/rb/lib/python2.7/site-packages/Django-1.6.11-py2.7.egg/django/core/mail/message.py", line 276, in send
    return self.get_connection(fail_silently).send_messages([self])
  File "/opt/xxx/rb/lib/python2.7/site-packages/Django-1.6.11-py2.7.egg/django/core/mail/backends/smtp.py", line 87, in send_messages
    new_conn_created = self.open()
  File "/opt/xxx/rb/lib/python2.7/site-packages/Django-1.6.11-py2.7.egg/django/core/mail/backends/smtp.py", line 54, in open
    self.connection.login(self.username, self.password)
  File "/usr/local/lib/python2.7/smtplib.py", line 613, in login
    raise SMTPAuthenticationError(code, resp)
SMTPAuthenticationError: (535, '5.7.0 authentication failed')
</code></pre>

<p>  跟到如下smtplib.py里面看验证方法，调整了顺序（我这支持AUTH LOGIN PLAIN，没支持PAM)，然后保证用户名密码正确就基本可以使用了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ps grep不显示grep自己本身的方法]]></title>
    <link href="http://cxh.me/2015/03/31/ps-do-not-grep-self/"/>
    <updated>2015-03-31T15:45:00+08:00</updated>
    <id>http://cxh.me/2015/03/31/ps-do-not-grep-self</id>
    <content type="html"><![CDATA[<p>  主要两种方式：</p>

<ol>
<li><p>不grep自己。</p>

<pre><code> -v, --invert-match
     Invert the sense of matching, to select non-matching lines.
 所以：
     ps xuf|grep python|grep -v grep
</code></pre></li>
<li><p>awk 略去最后一行。</p>

<pre><code> ps xuf|grep python|awk 'NR&gt;1{print p}{p=$2}'
</code></pre>

<p> 解释下：第一行的时候，NR=1不打印，但是把pid存在p中，下一行打印，最后一行的时候，打印的是上一行的pid。</p>

<p> awk博大精深&hellip;</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于ubuntu gnome下crontab运行的问题]]></title>
    <link href="http://cxh.me/2015/03/24/ubuntu-gnome-crontab/"/>
    <updated>2015-03-24T13:54:00+08:00</updated>
    <id>http://cxh.me/2015/03/24/ubuntu-gnome-crontab</id>
    <content type="html"><![CDATA[<p>  今天想在gnome下运行一个自动关机前的提示，发现crontab根本不起作用啊。以为是路径和root权限的问题，但是路径没问题，而且root的crontab必须要sudo crontab -e的，也就是说crontab还是执行在当前用户下。</p>

<p>  后来发现对图形界面程序来讲，crontab的进程需要指定输出到哪个显示的，也就是</p>

<pre><code>export DISPLAY=:0 #:0指第一个显示终端，ctrl+alt+f7那个
/usr/bin/notify-send "亲，该去运动了！！一分钟后关机，请保存所有未保存的Job."
sudo shutdown -h 1
</code></pre>

<p>  或者直接在crontab -e中指定环境变量：</p>

<pre><code>DISPLAY=:0
30 20 * * * /home/cxh/repo/scripts/shutdown.sh
</code></pre>

<p>  可以顺便制定一下其他变量</p>

<pre><code>SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=cxh #如果出现错误，或者有数据输出，数据作为邮件发给这个帐号
HOME=/home/cxh #使用者运行的路径,这里是根目录
</code></pre>

<p>  crontab出错的信息会发邮件到对应用户，mail或者cat /var/mail/$USER查看。d *清理。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于Linux 安装和卸载tar ball形式的程序]]></title>
    <link href="http://cxh.me/2015/03/16/linux-install-uninstall-tar-ball/"/>
    <updated>2015-03-16T12:11:00+08:00</updated>
    <id>http://cxh.me/2015/03/16/linux-install-uninstall-tar-ball</id>
    <content type="html"><![CDATA[<p>  源码安装的一些NOTE:</p>

<ol>
<li>首先./configure &mdash;helps是可以看到所有编译选项的。</li>
<li>centos下，<code>yum install xx.rpm</code>，可以安装依赖，ubuntu下：<code>apt-get build-dep xx</code></li>
<li>zsh下，./configure tab是会提示所有的编译选项的。</li>
<li><p>Makefile如果没有uninstall选项，更合理的办法似乎是：</p>

<ol>
<li><p>先install到一个单独目录：</p>

<p> find . -exec rm 安装目录/{} \;</p></li>
</ol>


<p> 文件夹自然会失败。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos下编译ffmpeg]]></title>
    <link href="http://cxh.me/2015/03/13/centos-compilecentos-compile-ffmpeg/"/>
    <updated>2015-03-13T11:27:00+08:00</updated>
    <id>http://cxh.me/2015/03/13/centos-compilecentos-compile-ffmpeg</id>
    <content type="html"><![CDATA[<p>  先安装能通过yum直接安装的</p>

<pre><code>yum install autoconf automake gcc gcc-c++ git libtool make nasm pkgconfig wget zlib-devel
yum install yasm SDL SDL-devel dirac dirac-devel gsm gsm-devel libvpx libvpx-devel gnutls gnutls-devel freetype freetype-devel openjpeg openjpeg-devel opus opus-devel
</code></pre>

<p>  剩下lame lame-devel libvpxlame-devel xvidcore xvidcore-devel faac faac-devel opencore-amr opencore-amr-devel faad2 a52dec libfaac 手动安装</p>

<!--more-->


<p>  安装libfaac</p>

<pre><code>wget http://downloads.sourceforge.net/project/faac/faac-src/faac-1.28/faac-1.28.tar.gz
  tar xvfz faac-1.28.tar.gz
  cd faac-1.28/
  修改源码：
  ./bootstrap
  ./configure --prefix=$HOME --enable-shared
  make
  make install
</code></pre>

<p>  安装libfdk_aac</p>

<pre><code>wget http://jaist.dl.sourceforge.net/project/opencore-amr/fdk-aac/fdk-aac-0.1.4.tar.gz
tar zxvf fdk-aac-0.1.4.tar.gz
cd fdk-aac-0.1.4
./autogen.sh
./configure --prefix=$HOME --enable-shared
  make
  make install
</code></pre>

<p>  安装mp3lame</p>

<pre><code>wget http://jaist.dl.sourceforge.net/project/lame/lame/3.99/lame-3.99.5.tar.gz
tar zxvf lame-3.99.5.tar.gz
cd lame-3.99.5.tar.gz
./configure --prefix=$HOME --enable-shared
  make
  make install  
</code></pre>

<p>  安装opencore-amr</p>

<pre><code>wget http://jaist.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-0.1.3.tar.gz
tar zxvf opencore-amr-0.1.3.tar.gz
cd opencore-amr-0.1.3
./configure --prefix=$HOME --enable-shared
  make
  make install  
</code></pre>

<p>  安装 vo_aacenc</p>

<pre><code>wget http://heanet.dl.sourceforge.net/project/opencore-amr/vo-aacenc/vo-aacenc-0.1.3.tar.gz
  tar zxvf vo-aacenc-0.1.3.tar.gz
  cd vo-aacenc-0.1.3
  ./configure --prefix=$HOME --enable-shared
  make
  make install
</code></pre>

<p>  安装libx264</p>

<pre><code>git clone git://git.videolan.org/x264.git
cd x264
  ./configure --prefix=$HOME --enable-shared
  make 
  make install
</code></pre>

<p>  安装ffmpeg</p>

<pre><code>git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg
cd ffmpeg
./configure --prefix=$HOME --enable-libfaac --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libvo-aacenc --enable-libvorbis --enable-libvpx --enable-shared --enable-libx264 --enable-gpl --enable-nonfree --enable-version3 --enable-openssl --enable-gnutls --enable-zlib --extra-cflags="-I $HOME/include" --extra-ldflags="-L $HOME/lib"
make 
make install
</code></pre>

<p>  安装libav</p>

<pre><code>wget https://libav.org/releases/libav-11.2.tar.gz
tar zxvf libav-11.2.tar.gz
cd libav-11.2
export PKG_CONFIG_PATH=$HOME/lib/pkgconfig
./configure --prefix=$HOME --enable-libfaac --enable-libfdk-aac --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopus --enable-libvo-aacenc --enable-libvorbis --enable-libvpx --enable-shared --enable-libx264 --enable-gpl --enable-nonfree --enable-version3 --enable-openssl --enable-gnutls --enable-zlib --extra-cflags="-I $HOME/include" --extra-ldflags="-L $HOME/lib"
make 
make install
</code></pre>

<p>  安装mplayer，只用来编解码，不需要界面</p>

<pre><code>./configure --prefix=$HOME --disable-gui --codecsdir=DIR
</code></pre>

<p>  去掉了一些不用的：</p>

<pre><code>--enable-rtmp --enable-libschroedinger   --enable-libspeex --enable-libtheora
</code></pre>
]]></content>
  </entry>
  
</feed>
