<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: memcached源码分析 | CXH.ME]]></title>
  <link href="http://cxh.me/category/memcachedyuan-ma-fen-xi/atom.xml" rel="self"/>
  <link href="http://cxh.me/"/>
  <updated>2013-10-22T16:01:41+08:00</updated>
  <id>http://cxh.me/</id>
  <author>
    <name><![CDATA[Harry Chen]]></name>
    <email><![CDATA[sdqxcxh@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[memcached源码分析-内存管理]]></title>
    <link href="http://cxh.me/2013/09/15/memcached-source-analysis/"/>
    <updated>2013-09-15T18:29:00+08:00</updated>
    <id>http://cxh.me/2013/09/15/memcached-source-analysis</id>
    <content type="html"><![CDATA[<p>Memcached是一套分布式的缓存系统, 对于WEB应用来讲, Memcached的引入可以减少对于数据库等的请求, 从而减少应用响应时间, 提高吞吐量. 国外类似的实现有Redis等. 国内有淘宝自主研发的tair系统等.</p>

<p>memcached的源码实现很优雅, 相对于其他的开源系统, 比如nginx\apache等, memcached的实现并不复杂, 是一份很好的教材. 这里我们分几部分分析一下memcached的源码. (基于memcached 1.4.0)</p>

<h2>基本源码结构</h2>

<p>主要的源码有:</p>

<ul>
<li>memcached.c: 系统入口, 并完成初始化等工作, 通过libevent建立连接, 并</li>
</ul>


<p>//TODO</p>
]]></content>
  </entry>
  
</feed>
