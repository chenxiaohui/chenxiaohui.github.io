<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 其他 | CXH.ME]]></title>
  <link href="http://cxh.me/category/qi-ta/atom.xml" rel="self"/>
  <link href="http://cxh.me/"/>
  <updated>2014-12-26T12:53:12+08:00</updated>
  <id>http://cxh.me/</id>
  <author>
    <name><![CDATA[Harry Chen]]></name>
    <email><![CDATA[sdqxcxh@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Maven多模块]]></title>
    <link href="http://cxh.me/2014/12/25/maven-multi-module-project/"/>
    <updated>2014-12-25T20:24:00+08:00</updated>
    <id>http://cxh.me/2014/12/25/maven-multi-module-project</id>
    <content type="html"><![CDATA[<pre><code>mvn exec:java -pl module2 -Dexec.mainClass=MyMain

    &lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.7&lt;/source&gt;
                &lt;target&gt;1.7&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thrift依赖和Slf4j]]></title>
    <link href="http://cxh.me/2014/12/25/thrift-and-slf4j/"/>
    <updated>2014-12-25T18:24:00+08:00</updated>
    <id>http://cxh.me/2014/12/25/thrift-and-slf4j</id>
    <content type="html"><![CDATA[<p>  用Thrift做一个分布式系统的RPC，发现跑起来的时候总提示<code>Failed to load class org.slf4j.impl.StaticLoggerBinder</code>，看了看maven依赖感觉没啥问题啊，slf4j-api-xx.jar好好的在呢。分析了maven的依赖，eclipse的问题，最后发现都没问题啊。最后发现还是不了解slf4j，以为跟log4j一样的，其实作为一个proxy，slf4j-api只是一套接口，实现的依赖没有添加进来。</p>

<p>   Thrift的依赖加进来的时候（如下），Dependency Hierachy解析会添加相关的包，但是只添加了slf4j-api，动态编译也不会出错，毕竟接口都有了，但是运行时从classpath找不到对应的包。</p>

<pre><code>  &lt;dependency&gt;
    &lt;groupId&gt;org.apache.thrift&lt;/groupId&gt;
    &lt;artifactId&gt;libthrift&lt;/artifactId&gt;
    &lt;version&gt;0.8.0&lt;/version&gt;
  &lt;/dependency&gt;
</code></pre>

<p>  在上面的基础上要加入一个任意一个slf4j-api的实现：</p>

<pre><code>Placing one (and only one) of slf4j-nop.jar, slf4j-simple.jar, slf4j-log4j12.jar, slf4j-jdk14.jar or logback-classic.jar on the class path should solve the problem.
</code></pre>

<p>  另外libthrift的pom默认依赖的slf4j-api应该是1.5.8，可能会出现如下不兼容的情况：</p>

<pre><code>SLF4J: The requested version 1.5.8 by your slf4j binding is not compatible with [1.6, 1.7]
SLF4J: See http://www.slf4j.org/codes.html#version_mismatch for further details.
</code></pre>

<p>  可以对libthrift的POM加入例外：</p>

<pre><code>&lt;exclusions&gt;
    &lt;exclusion&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
    &lt;/exclusion&gt;
&lt;/exclusions&gt;
</code></pre>

<p>  每个实现详见<a href="http://blog.csdn.net/robert_mm/article/details/8197108" title=" slf4j-api、slf4j-log4j12以及log4j之间什么关系？">参考文献2</a></p>

<h3>参考文献:</h3>

<blockquote><p>[1] SLF4J warning or error messages and their meanings, <a href="http://www.slf4j.org/codes.html#StaticLoggerBinder">http://www.slf4j.org/codes.html#StaticLoggerBinder</a></p>

<p>[2]  slf4j-api、slf4j-log4j12以及log4j之间什么关系？, <a href="http://blog.csdn.net/robert_mm/article/details/8197108">http://blog.csdn.net/robert_mm/article/details/8197108</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于Maven回滚了eclipse中项目的JRE版本]]></title>
    <link href="http://cxh.me/2014/12/25/maven-revert-eclipse-jdk-version/"/>
    <updated>2014-12-25T14:49:00+08:00</updated>
    <id>http://cxh.me/2014/12/25/maven-revert-eclipse-jdk-version</id>
    <content type="html"><![CDATA[<p>  发现在命令行对一个项目执行<code>mvn install</code>的时候，回eclipse看就会有些错误，原因如<a href="http://cxh.me/2014/12/08/eclipse-java-override-warning/" title="关于eclipse里面override上的warning">这里</a>所说，JRE版本和compliance level被回滚到1.5了。查看配置发现，eclipse导入配置并没有设置这里。如下：</p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;projectDescription&gt;
    &lt;name&gt;realtime_ua&lt;/name&gt;
    &lt;comment&gt;&lt;/comment&gt;
    &lt;projects&gt;
    &lt;/projects&gt;
    &lt;buildSpec&gt;
        &lt;buildCommand&gt;
            &lt;name&gt;org.eclipse.m2e.core.maven2Builder&lt;/name&gt;
            &lt;arguments&gt;
            &lt;/arguments&gt;
        &lt;/buildCommand&gt;
    &lt;/buildSpec&gt;
    &lt;natures&gt;
        &lt;nature&gt;org.eclipse.m2e.core.maven2Nature&lt;/nature&gt;
    &lt;/natures&gt;
&lt;/projectDescription&gt;
</code></pre>

<p>  实际导入的JRE版本是m2eclipse插件决定的。参考<a href="http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b" title="What causes a new Maven project in Eclipse to use Java 1.5 instead of Java 1.6 by default and how can I ensure it doesn't?">这里</a>加入对maven-compiler-plugin的默认配置即可：</p>

<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
              &lt;source&gt;1.6&lt;/source&gt;
              &lt;target&gt;1.6&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>

<p>  多module项目请把配置直接加在root-project的pom.xml下。</p>

<!--more-->


<h3>参考文献:</h3>

<blockquote><p>[1] 关于eclipse里面override上的warning, <a href="http://cxh.me/2014/12/08/eclipse-java-override-warning/">http://cxh.me/2014/12/08/eclipse-java-override-warning/</a></p>

<p>[2] What causes a new Maven project in Eclipse to use Java 1.5 instead of Java 1.6 by default and how can I ensure it doesn&rsquo;t?, <a href="http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b">http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b</a></p>

<p>[3] Solved: Java compiler level does not match the version of the installed Java project facet, <a href="http://howtodoinjava.com/2013/06/04/solved-java-compiler-level-does-not-match-the-version-of-the-installed-java-project-facet/">http://howtodoinjava.com/2013/06/04/solved-java-compiler-level-does-not-match-the-version-of-the-installed-java-project-facet/</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于eclipse里面override上的warning]]></title>
    <link href="http://cxh.me/2014/12/08/eclipse-java-override-warning/"/>
    <updated>2014-12-08T16:53:00+08:00</updated>
    <id>http://cxh.me/2014/12/08/eclipse-java-override-warning</id>
    <content type="html"><![CDATA[<p>  写一个Thrift的调用。生成的Thrift代码在eclipse里面打开就报错。如下：</p>

<p>  <img class="center" src="/images/2014/method_callback.png" title="" ></p>

<p>  看AsyncMethodCallback的代码，没有任何问题啊：</p>

<p>  <img class="center" src="/images/2014/async_callback.png" title="" ></p>

<p>  后来发现当前项目JRE的版本是1.5，<del>~貌似1.5的JRE有个bug</del>。切到1.6以上版本就可以了。原因如下：</p>

<pre><code>Eclipse is defaulting to Java 1.5 and you have classes implementing interface methods (which in Java 1.6 can be annotated with @Override, but in Java 1.5 can only be applied to methods overriding a superclass method).
</code></pre>

<p>  如果依然有问题，可以直接改一下Compliance Level：</p>

<p>  <img class="img-polaroid center" src="/images/2014/compliance.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[同步github上的项目到gitcafe]]></title>
    <link href="http://cxh.me/2014/06/28/gitsync-github-gitcafe/"/>
    <updated>2014-06-28T12:41:00+08:00</updated>
    <id>http://cxh.me/2014/06/28/gitsync-github-gitcafe</id>
    <content type="html"><![CDATA[<p>  github固然好，只是国内访问有点慢。为了提高博客访问速度我决定把github上托管的博客同步到gitcafe上。最好能在DNS那里做CDN，但是貌似没有免费的服务。那直接指向gitcafe好了，反正没有什么国外访问的需求。简单记一下过程。</p>

<p>  gitcafe自己有导入的功能，但是貌似不是很好用。而且不够智能。所以我们先建立一个跟用户名一样的目录。gitcafe只允许这种方式的Html页面生成。并且只渲染gitcafe-pages分支。</p>

<p>  我们修改source分支.git/config加入</p>

<pre><code>[remote "cafe"]
  url = git@gitcafe.com:xxx/xxx.git
  fetch = +refs/heads/*:refs/remotes/cafe/*
</code></pre>

<p>  由于</p>

<pre><code>[branch "source"]
  remote = origin
  merge = refs/heads/source
</code></pre>

<p>  所以当前source分支（这下面我没有master）默认提交到origin（github)，所以我们通过</p>

<pre><code>git push cafe
</code></pre>

<p>  提交source，会被扩展成：</p>

<pre><code>git push cafe source:source "当前分支
</code></pre>

<p>  然后提交<em>deploy，这是渲染之后的html页面，前面那个是octopress的源码。修改</em>deploy/.git/config</p>

<pre><code>[remote "cafe"]
  url = git@gitcafe.com:chenxiaohui/chenxiaohui.git
  fetch = +refs/heads/*:refs/remotes/cafe/*
</code></pre>

<p>  然后提交:</p>

<pre><code>git push cafe master:gitcafe-pages
</code></pre>

<!--more-->


<p>  本地分支名字和远程分支不同的时候不能省略，否则会被自动扩展成相同的名字。这就是问题了，我们多了一个master分支&hellip;.</p>

<p>  按照gitcafe的教程删除master未果，不过顺便把默认分支改成了gitcafe-pages。删除master分支的时候，里面有一段说明：</p>

<pre><code>为什么要删除 master 分支
当你在创建一个新的仓库的时候没有指定分支的话，Git 会默认创建 master 分支并指定它为默认分支。

一般情况下使用 master 分支作为整个项目的核心分支是很普遍的行为， 而 Pages 服务之所以使用 gitcafe-pages 分支的方式区别项目文件和 Pages 文件。 这样你就可以在一个仓库中保存他们而且彼此不会有任何影响。

但是像是个人主页类的 Pages 服务或其他一些应用场合，可能并不需要 master 的存在， 甚至必须要删除它，或者只是你有洁癖┑(￣Д ￣)┍ 那么你就需要如下的方法来删除 master 分支。
</code></pre>

<p>  (#‵′)靠，就是这样。</p>

<p>  最后修改一下Rakefile</p>

<pre><code>...
    system "git push origin #{deploy_branch}"
    system "git push cafe #{deploy_branch}:gitcafe-pages"
    puts "\n## Github Pages deploy complete"
  end
...

  puts "\n## Pushing source"
  system "git push origin "
  system "git push cafe"
  puts "\n## Github source pushed"
</code></pre>

<p>  当然问题是同一个本地分支track了两个远程分支，但是默认值只能配置一个：</p>

<pre><code>[branch "master"]
    remote = cafe
    merge = refs/heads/gitcafe-pages
</code></pre>

<p>  这说明master分支上更新gitcafe必须指明repository，好在我们直接用git push/pull不带任何参数的时候不多。同时如果git pull的话，默认的merge两个repository是不同的，好在我们也一般不用从两个repository上面pull。</p>

<p>  顺便去挂一下域名就好了。</p>

<p>  矮马，快多了。</p>
]]></content>
  </entry>
  
</feed>
