<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 其他 | CXH.ME]]></title>
  <link href="http://cxh.me/category/qi-ta/atom.xml" rel="self"/>
  <link href="http://cxh.me/"/>
  <updated>2015-01-05T20:40:40+08:00</updated>
  <id>http://cxh.me/</id>
  <author>
    <name><![CDATA[Harry Chen]]></name>
    <email><![CDATA[sdqxcxh@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Eclipse调试的时候出现class not found]]></title>
    <link href="http://cxh.me/2015/01/05/eclipse-class-not-found/"/>
    <updated>2015-01-05T09:50:00+08:00</updated>
    <id>http://cxh.me/2015/01/05/eclipse-class-not-found</id>
    <content type="html"><![CDATA[<p>  昨天遇到这样一个问题：</p>

<p>  <img class="img-polaroid center" src="/images/2015/classnotfound.png"></p>

<p>  开始以为是依赖的问题，更新了所有的jar包和Maven依赖，发现没有什么问题。怀疑是eclipse，写了一个简单的程序，发现一样找不到class。</p>

<p>  解决办法是先把breakpoint里面的ClassNotFoundException: caught and uncaught去掉了。不知道为什么会造成这个结果。</p>

<p>  <img class="img-polaroid center" src="/images/2015/breakpoint.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git中删除已经缓存的文件]]></title>
    <link href="http://cxh.me/2015/01/04/del-cached-files-in-git/"/>
    <updated>2015-01-04T16:49:00+08:00</updated>
    <id>http://cxh.me/2015/01/04/del-cached-files-in-git</id>
    <content type="html"><![CDATA[<p>  经常遇到一种情况，开始项目的时候没加.gitignore文件，提交之后发现有大量的pyc文件残留，这样两地共同修改的时候pyc文件会造成大量的冲突。针对这种情况，可以如下解决：</p>

<ol>
<li><p> 建立.gitignore文件并写入：</p>

<pre><code>.pyc
.swp
</code></pre></li>
<li><p> 删除所有缓存中的数据：</p>

<pre><code>find . -name '*.pyc' -o -name '*.swp' &gt; /tmp/files
while read line; do
    git rm --cached $line
done &lt; /tmp/files
</code></pre></li>
<li><p> 在冲突的一端回滚所有pyc冲突：</p>

<pre><code>find . -name '*.pyc' -o -name '*.swp' &gt; /tmp/files
while read line; do
    git checkout -f  $line
done &lt; /tmp/files
</code></pre></li>
<li><p> 冲突的一端更新修改：</p>

<pre><code>git pull origin
</code></pre></li>
</ol>


<p>  补充：</p>

<p>  蛋疼了&hellip;直接这样就行了</p>

<pre><code>git rm --cached `find . -name '*.pyc' -o -name '*.swp'`

或者 find . -name '*.pyc' -o -name '*.swp' -exec git rm --cached {} \; 
</code></pre>

<p>  忘了这些命令都接受多个参数&hellip;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thrift依赖和Slf4j]]></title>
    <link href="http://cxh.me/2014/12/25/thrift-and-slf4j/"/>
    <updated>2014-12-25T18:24:00+08:00</updated>
    <id>http://cxh.me/2014/12/25/thrift-and-slf4j</id>
    <content type="html"><![CDATA[<p>  用Thrift做一个分布式系统的RPC，发现跑起来的时候总提示<code>Failed to load class org.slf4j.impl.StaticLoggerBinder</code>，看了看maven依赖感觉没啥问题啊，slf4j-api-xx.jar好好的在呢。分析了maven的依赖，eclipse的问题，最后发现都没问题啊。最后发现还是不了解slf4j，以为跟log4j一样的，其实作为一个proxy，slf4j-api只是一套接口，实现的依赖没有添加进来。</p>

<p>   Thrift的依赖加进来的时候（如下），Dependency Hierachy解析会添加相关的包，但是只添加了slf4j-api，动态编译也不会出错，毕竟接口都有了，但是运行时从classpath找不到对应的包。</p>

<pre><code>  &lt;dependency&gt;
    &lt;groupId&gt;org.apache.thrift&lt;/groupId&gt;
    &lt;artifactId&gt;libthrift&lt;/artifactId&gt;
    &lt;version&gt;0.8.0&lt;/version&gt;
  &lt;/dependency&gt;
</code></pre>

<p>  在上面的基础上要加入一个任意一个slf4j-api的实现：</p>

<pre><code>Placing one (and only one) of slf4j-nop.jar, slf4j-simple.jar, slf4j-log4j12.jar, slf4j-jdk14.jar or logback-classic.jar on the class path should solve the problem.
</code></pre>

<p>  另外libthrift的pom默认依赖的slf4j-api应该是1.5.8，可能会出现如下不兼容的情况：</p>

<pre><code>SLF4J: The requested version 1.5.8 by your slf4j binding is not compatible with [1.6, 1.7]
SLF4J: See http://www.slf4j.org/codes.html#version_mismatch for further details.
</code></pre>

<p>  可以对libthrift的POM加入例外：</p>

<pre><code>&lt;exclusions&gt;
    &lt;exclusion&gt;
        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
        &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
    &lt;/exclusion&gt;
&lt;/exclusions&gt;
</code></pre>

<p>  每个实现详见<a href="http://blog.csdn.net/robert_mm/article/details/8197108" title=" slf4j-api、slf4j-log4j12以及log4j之间什么关系？">参考文献2</a></p>

<h3>参考文献:</h3>

<blockquote><p>[1] SLF4J warning or error messages and their meanings, <a href="http://www.slf4j.org/codes.html#StaticLoggerBinder">http://www.slf4j.org/codes.html#StaticLoggerBinder</a></p>

<p>[2]  slf4j-api、slf4j-log4j12以及log4j之间什么关系？, <a href="http://blog.csdn.net/robert_mm/article/details/8197108">http://blog.csdn.net/robert_mm/article/details/8197108</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于Maven回滚了eclipse中项目的JRE版本]]></title>
    <link href="http://cxh.me/2014/12/25/maven-revert-eclipse-jdk-version/"/>
    <updated>2014-12-25T14:49:00+08:00</updated>
    <id>http://cxh.me/2014/12/25/maven-revert-eclipse-jdk-version</id>
    <content type="html"><![CDATA[<p>  发现在命令行对一个项目执行<code>mvn install</code>的时候，回eclipse看就会有些错误，原因如<a href="http://cxh.me/2014/12/08/eclipse-java-override-warning/" title="关于eclipse里面override上的warning">这里</a>所说，JRE版本和compliance level被回滚到1.5了。查看配置发现，eclipse导入配置并没有设置这里。如下：</p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;projectDescription&gt;
    &lt;name&gt;realtime_ua&lt;/name&gt;
    &lt;comment&gt;&lt;/comment&gt;
    &lt;projects&gt;
    &lt;/projects&gt;
    &lt;buildSpec&gt;
        &lt;buildCommand&gt;
            &lt;name&gt;org.eclipse.m2e.core.maven2Builder&lt;/name&gt;
            &lt;arguments&gt;
            &lt;/arguments&gt;
        &lt;/buildCommand&gt;
    &lt;/buildSpec&gt;
    &lt;natures&gt;
        &lt;nature&gt;org.eclipse.m2e.core.maven2Nature&lt;/nature&gt;
    &lt;/natures&gt;
&lt;/projectDescription&gt;
</code></pre>

<p>  实际导入的JRE版本是m2eclipse插件决定的。参考<a href="http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b" title="What causes a new Maven project in Eclipse to use Java 1.5 instead of Java 1.6 by default and how can I ensure it doesn't?">这里</a>加入对maven-compiler-plugin的默认配置即可：</p>

<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
              &lt;source&gt;1.6&lt;/source&gt;
              &lt;target&gt;1.6&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>

<p>  多module项目请把配置直接加在root-project的pom.xml下。</p>

<!--more-->


<h3>参考文献:</h3>

<blockquote><p>[1] 关于eclipse里面override上的warning, <a href="http://cxh.me/2014/12/08/eclipse-java-override-warning/">http://cxh.me/2014/12/08/eclipse-java-override-warning/</a></p>

<p>[2] What causes a new Maven project in Eclipse to use Java 1.5 instead of Java 1.6 by default and how can I ensure it doesn&rsquo;t?, <a href="http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b">http://stackoverflow.com/questions/3539139/what-causes-a-new-maven-project-in-eclipse-to-use-java-1-5-instead-of-java-1-6-b</a></p>

<p>[3] Solved: Java compiler level does not match the version of the installed Java project facet, <a href="http://howtodoinjava.com/2013/06/04/solved-java-compiler-level-does-not-match-the-version-of-the-installed-java-project-facet/">http://howtodoinjava.com/2013/06/04/solved-java-compiler-level-does-not-match-the-version-of-the-installed-java-project-facet/</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于eclipse里面override上的warning]]></title>
    <link href="http://cxh.me/2014/12/08/eclipse-java-override-warning/"/>
    <updated>2014-12-08T16:53:00+08:00</updated>
    <id>http://cxh.me/2014/12/08/eclipse-java-override-warning</id>
    <content type="html"><![CDATA[<p>  写一个Thrift的调用。生成的Thrift代码在eclipse里面打开就报错。如下：</p>

<p>  <img class="center" src="/images/2014/method_callback.png" title="" ></p>

<p>  看AsyncMethodCallback的代码，没有任何问题啊：</p>

<p>  <img class="center" src="/images/2014/async_callback.png" title="" ></p>

<p>  后来发现当前项目JRE的版本是1.5，<del>~貌似1.5的JRE有个bug</del>。切到1.6以上版本就可以了。原因如下：</p>

<pre><code>Eclipse is defaulting to Java 1.5 and you have classes implementing interface methods (which in Java 1.6 can be annotated with @Override, but in Java 1.5 can only be applied to methods overriding a superclass method).
</code></pre>

<p>  如果依然有问题，可以直接改一下Compliance Level：</p>

<p>  <img class="img-polaroid center" src="/images/2014/compliance.png"></p>
]]></content>
  </entry>
  
</feed>
